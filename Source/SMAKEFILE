#
#	Toplevel SMakefile for AmigaPython 2.7.18
#
#	Based on Irmen de Jong's Python port
#	Updated for Python 2.7.18
#

# Program name
PROGRAM = Python27

all: $(PROGRAM)

#
# define to use mempools library
# (use mempools39 to link with V39+ only pools lib => shorter & faster)
#
#MEMPOOLSLIB=LIB:mempools39nb.lib
#STARTUP=LIB:c_mempools.o

# make sure to include the appropriate math library here
# For VBCC with PosixLib, we need the IEEE math library
MLIB=LIB:scmieee.lib

#
# define if NOT using mempools library
#
MEMPOOLSLIB=
STARTUP=LIB:c.o
#

#
# AMIGA EXTENSIONS defines
# bsdsocket.library networking uses 'amigapythonamitcp.lib'
# Not using networking? Choose 'amigapython.lib'
#
AMIGAPYTHONLIBNAM=amigapythonamitcp.lib
## AMIGAPYTHONLIBNAM=amigapython.lib
AMIGAPYTHONLIB=Amiga/$(AMIGAPYTHONLIBNAM)

#
# define if developing new module -> faster turnarounds
# (add it to the module list if it's finished)
#
NEWMODULES =

#
# Network Protocol Stack link library
#
TCPSTACKLIB=

#
# Link library configuration. Change to reflect correct math options etc.
#
CLIBS = $(AMIGAPYTHONLIB) $(MEMPOOLSLIB) $(TCPSTACKLIB) $(MLIB) LIB:scnb.lib LIB:z.lib

# Set link options to thy likes.
# (compiler options can be changed using SCOPTIONS)
LINKOPTS = SC BATCH NOICONS

LIBS = Modules/Modules.lib Parser/Parser.lib Python/Python.lib Objects/Objects.lib $(CLIBS)

OBJECTS = Modules/python.o Modules/main.o $(NEWMODULES)

newbuild:
	@eval `type buildno` + 1 >buildno1
	-@delete >NIL: buildno
	-@rename buildno1 buildno
	@echo "Build number is now `type buildno`"

$(PROGRAM): $(OBJECTS) $(LIBS) buildno
	@echo "Build number is `type buildno` (use 'make newbuild' to increase)"
	@SC Modules/getbuildinfo.c DEFINE=BUILD=`type buildno`
	SLINK WITH <<
TO $(PROGRAM)
FROM $(STARTUP)
Modules/getbuildinfo.o
$(OBJECTS)
$(LINKOPTS)
STRIPDEBUG
LIB $(LIBS)
<<

buildno:
	echo 0 >buildno

debug:
	SLINK WITH <<
	TO $(PROGRAM)_debug
	FROM $(STARTUP)
	Modules/getbuildinfo.o
	$(OBJECTS)
	$(LINKOPTS)
	LIB $(LIBS)
	<<
	-delete >NIL: \#?.tmp

clean:
	-delete Parser/\#?.(o|lib) quiet
	-delete Objects/\#?.(o|lib) quiet
	-delete Modules/\#?.(o|lib) quiet
	-delete Python/\#?.(o|lib) quiet
	-delete $(PROGRAM) \#?.tmp QUIET
	-delete $(AMIGAPYTHONLIB)
	-delete Amiga/\#?.(o|lib)

Modules/Modules.lib: Modules
	@echo "******************** ENTERING MODULES/ "
	execute <<
cd Modules
smake Modules.lib
<<
	@echo "******************** LEAVING MODULES/  "

Parser/Parser.lib: Parser
	@echo "******************** ENTERING PARSER/ "
	execute <<
cd Parser
smake Parser.lib
<<
	@echo "******************** LEAVING PARSER/  "

Python/Python.lib: Python
	@echo "******************** ENTERING PYTHON/ "
	execute <<
cd Python
smake Python.lib
<<
	@echo "******************** LEAVING PYTHON/  "

Objects/Objects.lib: Objects
	@echo "******************** ENTERING OBJECTS/ "
	execute <<
cd Objects
smake Objects.lib
<<
	@echo "******************** LEAVING OBJECTS/  "

$(AMIGAPYTHONLIB): Amiga
	@echo "******************** ENTERING Amiga/ "
	execute <<
cd Amiga
smake $(AMIGAPYTHONLIBNAM)
<<
	@echo "******************** LEAVING Amiga/  " 